--Show order_date, shipped_date, customer_id, Freight of all orders placed on 2018 Feb 26
-- extract data from northwind.db 
SELECT order_date,shipped_date,customer_id,freight
from orders
where order_date = '2018-02-26';

--Show the employee_id, order_id, customer_id, required_date, shipped_date from all orders shipped later than the required date
SELECT employee_id,order_id,customer_id,required_date,shipped_date
from orders
where shipped_date > required_date;

--Show all the even numbered Order_id from the orders table
SELECT order_id
from orders
where mod(order_id,2) = 0;
OR
SELECT order_id
from orders
where order_id % 2 = 0;

-- Show the city, company_name, contact_name of all customers from cities which contains the letter 'L' in the city name, sorted by contact_name
SELECT city,company_name,contact_name
from customers
where city like '%l%' 
order by contact_name

--Show the company_name, contact_name, fax number of all customers that has a fax number. (not null)
SELECT company_name,contact_name,fax
from customers
where fax not in ('null')

--Show the first_name, last_name. hire_date of the most recently hired employee.
SELECT first_name,last_name,hire_date
from employees
order by hire_date desc
limit 1
OR
select 
    first_name,
    last_name,
    max(hire_date) as hire_date
  from employees

--Show the average unit price rounded to 2 decimal places, the total units in stock, total discontinued products from the products table.
SELECT round(avg(unit_price), 2) as average_price,sum(units_in_stock) as total_stock,sum(discontinued) as total_discontinued
from products
order by total_discontinued

--Show all the contact_name, address, city of all customers which are not from 'Germany', 'Mexico', 'Spain'
SELECT contact_name, address, city
FROM customers
WHERE Country NOT IN ('Germany','Mexico', 'Spain')

--Show the ProductName, CompanyName, CategoryName from the products, suppliers, and categories table
SELECT product_name,company_name,category_name
from products as p
join suppliers as s on p.supplier_id = s.supplier_id
join categories as c on c.category_id = p.category_id

--Show the category_name and the average product unit price for each category rounded to 2 decimal places.
SELECT category_name, round(avg(p.unit_price ),2) as average_unit_price
from categories as c
inner join products as p on c.category_id = p.category_id 
GROUP BY category_name

--Show the city, company_name, contact_name from the customers and suppliers table merged together.
--Create a column which contains 'customers' or 'suppliers' depending on the table it came from.
select City, company_name, contact_name, 'customers' as relationship 
from customers
union
select city, company_name, contact_name, 'suppliers'
from suppliers

--Show the total amount of orders for each year/month.
select 
  year(order_date) as order_year,
  month(order_date) as order_month,
  count(*) as no_of_orders
from orders
group by order_year, order_month

--Show the employee's first_name and last_name, a "num_orders" column with a count of the orders taken, and a column called "Shipped"
that displays "On Time" if the order shipped_date is less or equal to the required_date, "Late" if the order shipped late, 
"Not Shipped" if shipped_date is null.
--Order by employee last_name, then by first_name, and then descending by number of orders.
SELECT
    e.first_name,
    e.last_name,
    COUNT(o.order_id) AS num_orders,
    CASE
        WHEN o.shipped_date <= o.required_date THEN 'On Time'
        WHEN o.shipped_date IS NULL THEN 'Not Shipped'
        ELSE 'Late'
    END AS Shipped
FROM
    employees e
LEFT JOIN
    orders o ON e.employee_id = o.employee_id
GROUP BY
    e.first_name, e.last_name,shipped
ORDER BY
    e.last_name, e.first_name, num_orders DESC;

--Show how much money the company lost due to giving discounts each year, order the years from most recent to least recent. Round to 2 decimal places
SELECT year(order_date) as order_year,round(sum(unit_price*quantity*discount),2) as discount_amount
from order_details od
join orders o on od.order_id = o.order_id
join products p on od.product_id = p.product_id
group by order_year
order by order_date desc
